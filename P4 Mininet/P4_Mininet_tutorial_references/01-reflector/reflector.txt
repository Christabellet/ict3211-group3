(1)
parser MyParser(packet_in packet,
                out headers hdr,
                inout metadata meta,
                inout standard_metadata_t standard_metadata) {
      state start{
  	  packet.extract(hdr.ethernet); // TODO 1: parse ethernet header 
          transition accept;
      }
}

(2) (3)
control MyIngress(inout headers hdr,
                  inout metadata meta,
                  inout standard_metadata_t standard_metadata) {
    action swap_mac(){
       macAddr_t tmp;
	   tmp = hdr.ethernet.srcAddr;
	   hdr.ethernet.srcAddr = hdr.ethernet.dstAddr;
	   hdr.ethernet.dstAddr = tmp;
    }
    apply {
       swap_mac(); // Swap MAC addresses. (TODO 2: swap mac addresses)
       // Set Output port == Input port (TODO 3: set output port)
	   standard_metadata.egress_spec = standard_metadata.ingress_port; 
    }
}

(4)
control MyDeparser(packet_out packet, in headers hdr) {
    apply {
		// parsed headers have to be added again into the packet
		packet.emit(hdr.ethernet); // TODO 4: deparse ethernet header
	}
}